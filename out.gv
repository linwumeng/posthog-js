digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_855d2756 [label="68: deduplicateKeys()" name="apm::deduplicateKeys" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_271b0575 [label="103: getPerformanceData()" name="apm::getPerformanceData" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_6a396ba1 [label="44: getPerformanceEntriesByType()" name="apm::getPerformanceEntriesByType" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_be695919 [label="4: isFloat()" name="apm::isFloat" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_6abd8b5e [label="8: optimisePerformanceData()" name="apm::optimisePerformanceData" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_284c26bf [label="85: pageLoadFrom()" name="apm::pageLoadFrom" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_137eae1f [label="8: getClassName()" name="autocapture-utils::getClassName" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_150fe04a [label="29: getSafeText()" name="autocapture-utils::getSafeText" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_27f74d09 [label="249: isAngularStyleAttr()" name="autocapture-utils::isAngularStyleAttr" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_ac68b8b9 [label="57: isElementNode()" name="autocapture-utils::isElementNode" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_c5f2357e [label="196: isSensitiveElement()" name="autocapture-utils::isSensitiveElement" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_cd7ebf73 [label="71: isTag()" name="autocapture-utils::isTag" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a62c171c [label="80: isTextNode()" name="autocapture-utils::isTextNode" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_feff4942 [label="92: shouldCaptureDomEvent()" name="autocapture-utils::shouldCaptureDomEvent" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_e06d9f73 [label="154: shouldCaptureElement()" name="autocapture-utils::shouldCaptureElement" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_63ed6b75 [label="217: shouldCaptureValue()" name="autocapture-utils::shouldCaptureValue" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_489f7ad3 [label="0: (global)()" name="autocapture::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_10780fb7 [label="30: getTime()" name="base-request-queue::RequestQueueScaffold.getTime" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_b09115fd [label="22: poll()" name="base-request-queue::RequestQueueScaffold.poll" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_af518ebf [label="10: setPollInterval()" name="base-request-queue::RequestQueueScaffold.setPollInterval" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_265824d7 [label="4: (constructor)()" name="capture-metrics::CaptureMetrics.(constructor)" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_5ed2877a [label="16: decr()" name="capture-metrics::CaptureMetrics.decr" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_5a15c13a [label="9: incr()" name="capture-metrics::CaptureMetrics.incr" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_2aa31c4f [label="15: compressData()" name="compression::compressData" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_98e42e7b [label="5: decideCompression()" name="compression::decideCompression" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_b0578bf0 [label="5: (constructor)()" name="decide::Decide.(constructor)" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_514f409c [label="10: call()" name="decide::Decide.call" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_42447cd0 [label="29: parseDecideResponse()" name="decide::Decide.parseDecideResponse" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_a0167f11 [label="263: _addOptOutCheck()" name="gdpr-utils::_addOptOutCheck" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_98f07fc3 [label="151: _getStorage()" name="gdpr-utils::_getStorage" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_92b08f8d [label="169: _getStorageKey()" name="gdpr-utils::_getStorageKey" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_785684e7 [label="181: _getStorageValue()" name="gdpr-utils::_getStorageValue" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_15095243 [label="192: _hasDoNotTrackFlagOn()" name="gdpr-utils::_hasDoNotTrackFlagOn" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a310ae8c [label="229: _optInOut()" name="gdpr-utils::_optInOut" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_861231fd [label="99: addOptOutCheckPostHogLib()" name="gdpr-utils::addOptOutCheckPostHogLib" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_483c4904 [label="116: addOptOutCheckPostHogPeople()" name="gdpr-utils::addOptOutCheckPostHogPeople" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_15936233 [label="138: clearOptInOut()" name="gdpr-utils::clearOptInOut" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_ae9815c7 [label="72: hasOptedIn()" name="gdpr-utils::hasOptedIn" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_abb6580f [label="85: hasOptedOut()" name="gdpr-utils::hasOptedOut" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_66b3c625 [label="44: optIn()" name="gdpr-utils::optIn" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_443cdce0 [label="60: optOut()" name="gdpr-utils::optOut" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6d21543a [label="0: (global)()" name="loader-globals::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_58d9af8c [label="0: (global)()" name="loader-module::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_945b5db8 [label="0: (global)()" name="lz-string::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_c60c8ce4 [label="17: getBaseValue()" name="lz-string::getBaseValue" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_ab0069a2 [label="0: (global)()" name="posthog-core::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_a3ae7b30 [label="1641: do_scroll_check()" name="posthog-core::do_scroll_check" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_466c3f44 [label="1627: dom_loaded_handler()" name="posthog-core::dom_loaded_handler" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_3175c7a4 [label="1711: init_as_module()" name="posthog-core::init_as_module" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_eb882e50 [label="1683: init_from_snippet()" name="posthog-core::init_from_snippet" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_8007fe6e [label="36: (constructor)()" name="posthog-featureflags::PostHogFeatureFlags.(constructor)" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_1e266f44 [label="112: _reloadFeatureFlagsRequest()" name="posthog-featureflags::PostHogFeatureFlags._reloadFeatureFlagsRequest" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_390ec5f3 [label="101: _startReloadTimer()" name="posthog-featureflags::PostHogFeatureFlags._startReloadTimer" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_f2c5acdb [label="176: addFeatureFlagsHandler()" name="posthog-featureflags::PostHogFeatureFlags.addFeatureFlagsHandler" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_e32bd5ba [label="145: getFeatureFlag()" name="posthog-featureflags::PostHogFeatureFlags.getFeatureFlag" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_8921ee5e [label="50: getFlagVariants()" name="posthog-featureflags::PostHogFeatureFlags.getFlagVariants" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_2894b91f [label="46: getFlags()" name="posthog-featureflags::PostHogFeatureFlags.getFlags" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_0451c88c [label="168: isFeatureEnabled()" name="posthog-featureflags::PostHogFeatureFlags.isFeatureEnabled" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_d4529678 [label="224: onFeatureFlags()" name="posthog-featureflags::PostHogFeatureFlags.onFeatureFlags" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_15a73134 [label="180: receivedFeatureFlags()" name="posthog-featureflags::PostHogFeatureFlags.receivedFeatureFlags" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_177c5cf9 [label="86: reloadFeatureFlags()" name="posthog-featureflags::PostHogFeatureFlags.reloadFeatureFlags" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_8c49cabe [label="97: resetRequestQueue()" name="posthog-featureflags::PostHogFeatureFlags.resetRequestQueue" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_95dc116b [label="93: setReloadingPaused()" name="posthog-featureflags::PostHogFeatureFlags.setReloadingPaused" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_22cec4ea [label="0: (global)()" name="posthog-people::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_850b6bb7 [label="5: (constructor)()" name="request-queue::RequestQueue.(constructor)" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_8db74ecb [label="11: enqueue()" name="request-queue::RequestQueue.enqueue" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_78f09ab0 [label="86: formatQueue()" name="request-queue::RequestQueue.formatQueue" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_09a32922 [label="22: poll()" name="request-queue::RequestQueue.poll" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_059b15a7 [label="76: unload()" name="request-queue::RequestQueue.unload" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_914f441b [label="64: updateUnloadMetrics()" name="request-queue::RequestQueue.updateUnloadMetrics" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_db0267bf [label="5: (constructor)()" name="retry-queue::RetryQueue.(constructor)" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_897c2156 [label="76: _executeXhrRequest()" name="retry-queue::RetryQueue._executeXhrRequest" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_2b0cb6f1 [label="90: _handleWeAreNowOnline()" name="retry-queue::RetryQueue._handleWeAreNowOnline" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_9ded7376 [label="24: enqueue()" name="retry-queue::RetryQueue.enqueue" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_f2758bc3 [label="49: flush()" name="retry-queue::RetryQueue.flush" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_393188e7 [label="39: poll()" name="retry-queue::RetryQueue.poll" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_9bea28ec [label="0: (global)()" name="send-request::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_e76b385f [label="9: (constructor)()" name="sessionid::SessionIdManager.(constructor)" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_bfb57664 [label="52: _getSessionId()" name="sessionid::SessionIdManager._getSessionId" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_d45c85a0 [label="32: _getWindowId()" name="sessionid::SessionIdManager._getWindowId" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_d5cfe5fc [label="44: _setSessionId()" name="sessionid::SessionIdManager._setSessionId" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a1b1ab51 [label="23: _setWindowId()" name="sessionid::SessionIdManager._setWindowId" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_ebbeec9b [label="65: getSessionAndWindowId()" name="sessionid::SessionIdManager.getSessionAndWindowId" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_c6b65eae [label="61: resetSessionId()" name="sessionid::SessionIdManager.resetSessionId" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_266146b2 [label="0: (global)()" name="storage::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_0017c8c3 [label="0: (global)()" name="utils::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_b8b3fe70 [label="323: deepCircularCopy()" name="utils::deepCircularCopy" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_7c81f64e [label="634: fixEvent()" name="utils::fixEvent" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_d3c69713 [label="603: makeHandler()" name="utils::makeHandler" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_9eabdf8f [label="255: pad()" name="utils::pad" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_af5b6cd9 [label="485: xor()" name="utils::xor" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_271b0575 -> node_6a396ba1 [color="#0072B2" penwidth="2"];
node_271b0575 -> node_6a396ba1 [color="#0072B2" penwidth="2"];
node_271b0575 -> node_6a396ba1 [color="#0072B2" penwidth="2"];
node_271b0575 -> node_284c26bf [color="#0072B2" penwidth="2"];
node_6a396ba1 -> node_6abd8b5e [color="#E69F00" penwidth="2"];
node_6abd8b5e -> node_855d2756 [color="#D55E00" penwidth="2"];
node_6abd8b5e -> node_be695919 [color="#D55E00" penwidth="2"];
node_150fe04a -> node_c5f2357e [color="#56B4E9" penwidth="2"];
node_150fe04a -> node_a62c171c [color="#56B4E9" penwidth="2"];
node_150fe04a -> node_e06d9f73 [color="#56B4E9" penwidth="2"];
node_c5f2357e -> node_cd7ebf73 [color="#D55E00" penwidth="2"];
node_c5f2357e -> node_cd7ebf73 [color="#D55E00" penwidth="2"];
node_c5f2357e -> node_cd7ebf73 [color="#D55E00" penwidth="2"];
node_feff4942 -> node_ac68b8b9 [color="#56B4E9" penwidth="2"];
node_feff4942 -> node_cd7ebf73 [color="#56B4E9" penwidth="2"];
node_feff4942 -> node_cd7ebf73 [color="#56B4E9" penwidth="2"];
node_e06d9f73 -> node_137eae1f [color="#009E73" penwidth="2"];
node_e06d9f73 -> node_137eae1f [color="#009E73" penwidth="2"];
node_e06d9f73 -> node_cd7ebf73 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_137eae1f [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_137eae1f [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_150fe04a [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_150fe04a [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_27f74d09 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_ac68b8b9 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_c5f2357e [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_cd7ebf73 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_a62c171c [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_feff4942 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_e06d9f73 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_e06d9f73 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_63ed6b75 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_63ed6b75 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_63ed6b75 [color="#009E73" penwidth="2"];
node_489f7ad3 -> node_10780fb7 [color="#009E73" penwidth="2"];
node_10780fb7 -> node_10780fb7 [color="#CC79A7" penwidth="2"];
node_af518ebf -> node_b09115fd [color="#CC79A7" penwidth="2"];
node_514f409c -> node_42447cd0 [color="#F0E442" penwidth="2"];
node_42447cd0 -> node_42447cd0 [color="#000000" penwidth="2"];
node_42447cd0 -> node_15a73134 [color="#000000" penwidth="2"];
node_a0167f11 -> node_514f409c [color="#E69F00" penwidth="2"];
node_a0167f11 -> node_514f409c [color="#E69F00" penwidth="2"];
node_a0167f11 -> node_514f409c [color="#E69F00" penwidth="2"];
node_a0167f11 -> node_514f409c [color="#E69F00" penwidth="2"];
node_a0167f11 -> node_514f409c [color="#E69F00" penwidth="2"];
node_a0167f11 -> node_abb6580f [color="#E69F00" penwidth="2"];
node_785684e7 -> node_98f07fc3 [color="#CC79A7" penwidth="2"];
node_785684e7 -> node_92b08f8d [color="#CC79A7" penwidth="2"];
node_a310ae8c -> node_98f07fc3 [color="#F0E442" penwidth="2"];
node_a310ae8c -> node_92b08f8d [color="#F0E442" penwidth="2"];
node_861231fd -> node_a0167f11 [color="#0072B2" penwidth="2"];
node_483c4904 -> node_a0167f11 [color="#F0E442" penwidth="2"];
node_15936233 -> node_98f07fc3 [color="#009E73" penwidth="2"];
node_15936233 -> node_92b08f8d [color="#009E73" penwidth="2"];
node_ae9815c7 -> node_785684e7 [color="#CC79A7" penwidth="2"];
node_abb6580f -> node_785684e7 [color="#CC79A7" penwidth="2"];
node_abb6580f -> node_15095243 [color="#CC79A7" penwidth="2"];
node_66b3c625 -> node_a310ae8c [color="#0072B2" penwidth="2"];
node_443cdce0 -> node_a310ae8c [color="#000000" penwidth="2"];
node_6d21543a -> node_eb882e50 [color="#56B4E9" penwidth="2"];
node_58d9af8c -> node_3175c7a4 [color="#F0E442" penwidth="2"];
node_945b5db8 -> node_514f409c [color="#000000" penwidth="2"];
node_945b5db8 -> node_514f409c [color="#000000" penwidth="2"];
node_945b5db8 -> node_514f409c [color="#000000" penwidth="2"];
node_945b5db8 -> node_514f409c [color="#000000" penwidth="2"];
node_945b5db8 -> node_c60c8ce4 [color="#000000" penwidth="2"];
node_945b5db8 -> node_c60c8ce4 [color="#000000" penwidth="2"];
node_ab0069a2 -> node_271b0575 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_10780fb7 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_265824d7 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_2aa31c4f [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_98e42e7b [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_b0578bf0 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_514f409c [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_514f409c [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_514f409c [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_861231fd [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_a3ae7b30 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_466c3f44 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_8007fe6e [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_e32bd5ba [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_0451c88c [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_d4529678 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_177c5cf9 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_177c5cf9 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_177c5cf9 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_8c49cabe [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_95dc116b [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_95dc116b [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_850b6bb7 [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_914f441b [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_db0267bf [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_e76b385f [color="#56B4E9" penwidth="2"];
node_ab0069a2 -> node_ebbeec9b [color="#56B4E9" penwidth="2"];
node_a3ae7b30 -> node_466c3f44 [color="#000000" penwidth="2"];
node_1e266f44 -> node_390ec5f3 [color="#F0E442" penwidth="2"];
node_1e266f44 -> node_15a73134 [color="#F0E442" penwidth="2"];
node_1e266f44 -> node_95dc116b [color="#F0E442" penwidth="2"];
node_1e266f44 -> node_95dc116b [color="#F0E442" penwidth="2"];
node_390ec5f3 -> node_1e266f44 [color="#009E73" penwidth="2"];
node_e32bd5ba -> node_8921ee5e [color="#56B4E9" penwidth="2"];
node_e32bd5ba -> node_2894b91f [color="#56B4E9" penwidth="2"];
node_2894b91f -> node_8921ee5e [color="#CC79A7" penwidth="2"];
node_0451c88c -> node_e32bd5ba [color="#F0E442" penwidth="2"];
node_0451c88c -> node_2894b91f [color="#F0E442" penwidth="2"];
node_d4529678 -> node_f2c5acdb [color="#000000" penwidth="2"];
node_d4529678 -> node_8921ee5e [color="#000000" penwidth="2"];
node_d4529678 -> node_2894b91f [color="#000000" penwidth="2"];
node_15a73134 -> node_8921ee5e [color="#F0E442" penwidth="2"];
node_15a73134 -> node_2894b91f [color="#F0E442" penwidth="2"];
node_177c5cf9 -> node_390ec5f3 [color="#E69F00" penwidth="2"];
node_22cec4ea -> node_483c4904 [color="#56B4E9" penwidth="2"];
node_22cec4ea -> node_483c4904 [color="#56B4E9" penwidth="2"];
node_8db74ecb -> node_5a15c13a [color="#009E73" penwidth="2"];
node_8db74ecb -> node_09a32922 [color="#009E73" penwidth="2"];
node_09a32922 -> node_10780fb7 [color="#56B4E9" penwidth="2"];
node_09a32922 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_09a32922 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_09a32922 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_09a32922 -> node_5a15c13a [color="#56B4E9" penwidth="2"];
node_09a32922 -> node_78f09ab0 [color="#56B4E9" penwidth="2"];
node_09a32922 -> node_09a32922 [color="#56B4E9" penwidth="2"];
node_059b15a7 -> node_78f09ab0 [color="#CC79A7" penwidth="2"];
node_914f441b -> node_5a15c13a [color="#009E73" penwidth="2"];
node_914f441b -> node_5a15c13a [color="#009E73" penwidth="2"];
node_914f441b -> node_5a15c13a [color="#009E73" penwidth="2"];
node_914f441b -> node_5a15c13a [color="#009E73" penwidth="2"];
node_914f441b -> node_78f09ab0 [color="#009E73" penwidth="2"];
node_db0267bf -> node_2b0cb6f1 [color="#CC79A7" penwidth="2"];
node_2b0cb6f1 -> node_f2758bc3 [color="#E69F00" penwidth="2"];
node_9ded7376 -> node_393188e7 [color="#D55E00" penwidth="2"];
node_f2758bc3 -> node_897c2156 [color="#009E73" penwidth="2"];
node_393188e7 -> node_f2758bc3 [color="#CC79A7" penwidth="2"];
node_393188e7 -> node_393188e7 [color="#CC79A7" penwidth="2"];
node_9bea28ec -> node_10780fb7 [color="#F0E442" penwidth="2"];
node_9bea28ec -> node_5ed2877a [color="#F0E442" penwidth="2"];
node_9bea28ec -> node_5a15c13a [color="#F0E442" penwidth="2"];
node_9bea28ec -> node_5a15c13a [color="#F0E442" penwidth="2"];
node_9bea28ec -> node_5a15c13a [color="#F0E442" penwidth="2"];
node_9bea28ec -> node_5a15c13a [color="#F0E442" penwidth="2"];
node_9bea28ec -> node_514f409c [color="#F0E442" penwidth="2"];
node_ebbeec9b -> node_10780fb7 [color="#009E73" penwidth="2"];
node_ebbeec9b -> node_bfb57664 [color="#009E73" penwidth="2"];
node_ebbeec9b -> node_d45c85a0 [color="#009E73" penwidth="2"];
node_ebbeec9b -> node_d5cfe5fc [color="#009E73" penwidth="2"];
node_ebbeec9b -> node_a1b1ab51 [color="#009E73" penwidth="2"];
node_c6b65eae -> node_d5cfe5fc [color="#D55E00" penwidth="2"];
node_266146b2 -> node_10780fb7 [color="#56B4E9" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_514f409c [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_b8b3fe70 [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_d3c69713 [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_9eabdf8f [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_9eabdf8f [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_9eabdf8f [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_9eabdf8f [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_9eabdf8f [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_af5b6cd9 [color="#009E73" penwidth="2"];
node_0017c8c3 -> node_af5b6cd9 [color="#009E73" penwidth="2"];
node_b8b3fe70 -> node_b8b3fe70 [color="#000000" penwidth="2"];
node_b8b3fe70 -> node_b8b3fe70 [color="#000000" penwidth="2"];
node_d3c69713 -> node_514f409c [color="#009E73" penwidth="2"];
node_d3c69713 -> node_7c81f64e [color="#009E73" penwidth="2"];
subgraph cluster_bcabf9f2 {
    node_be695919 node_6abd8b5e node_6a396ba1 node_855d2756 node_284c26bf node_271b0575;
    label="File: apm";
    name="apm";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_d6141fdf {
    node_489f7ad3;
    label="File: autocapture";
    name="autocapture";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_0c089495 {
    node_137eae1f node_150fe04a node_ac68b8b9 node_cd7ebf73 node_a62c171c node_feff4942 node_e06d9f73 node_c5f2357e node_63ed6b75 node_27f74d09;
    label="File: autocapture-utils";
    name="autocapture-utils";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_bc3e2ed9 {
    label="File: base-request-queue";
    name="base-request-queue";
    style="filled";
    graph[style=dotted];
    subgraph cluster_ad5d12ce {
        node_af518ebf node_b09115fd node_10780fb7;
        label="Class: RequestQueueScaffold";
        name="RequestQueueScaffold";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_685bf3b3 {
    label="File: capture-metrics";
    name="capture-metrics";
    style="filled";
    graph[style=dotted];
    subgraph cluster_683e34c6 {
        node_265824d7 node_5a15c13a node_5ed2877a;
        label="Class: CaptureMetrics";
        name="CaptureMetrics";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_b298579c {
    node_98e42e7b node_2aa31c4f;
    label="File: compression";
    name="compression";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_84f5b507 {
    label="File: decide";
    name="decide";
    style="filled";
    graph[style=dotted];
    subgraph cluster_fdf04e2b {
        node_b0578bf0 node_514f409c node_42447cd0;
        label="Class: Decide";
        name="Decide";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_760437b9 {
    node_66b3c625 node_443cdce0 node_ae9815c7 node_abb6580f node_861231fd node_483c4904 node_15936233 node_98f07fc3 node_92b08f8d node_785684e7 node_15095243 node_a310ae8c node_a0167f11;
    label="File: gdpr-utils";
    name="gdpr-utils";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_c23c3679 {
    node_6d21543a;
    label="File: loader-globals";
    name="loader-globals";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_84de4f82 {
    node_58d9af8c;
    label="File: loader-module";
    name="loader-module";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_9572677e {
    node_c60c8ce4 node_945b5db8;
    label="File: lz-string";
    name="lz-string";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_60247483 {
    node_466c3f44 node_a3ae7b30 node_eb882e50 node_3175c7a4 node_ab0069a2;
    label="File: posthog-core";
    name="posthog-core";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_66a50e22 {
    label="File: posthog-featureflags";
    name="posthog-featureflags";
    style="filled";
    graph[style=dotted];
    subgraph cluster_d3f3a4c7 {
        node_8007fe6e node_2894b91f node_8921ee5e node_177c5cf9 node_95dc116b node_8c49cabe node_390ec5f3 node_1e266f44 node_e32bd5ba node_0451c88c node_f2c5acdb node_15a73134 node_d4529678;
        label="Class: PostHogFeatureFlags";
        name="PostHogFeatureFlags";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_75c3b0f1 {
    node_22cec4ea;
    label="File: posthog-people";
    name="posthog-people";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_f7c11118 {
    label="File: request-queue";
    name="request-queue";
    style="filled";
    graph[style=dotted];
    subgraph cluster_f0d38f79 {
        node_850b6bb7 node_8db74ecb node_09a32922 node_914f441b node_059b15a7 node_78f09ab0;
        label="Class: RequestQueue";
        name="RequestQueue";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_5415a7ca {
    label="File: retry-queue";
    name="retry-queue";
    style="filled";
    graph[style=dotted];
    subgraph cluster_13343b81 {
        node_db0267bf node_9ded7376 node_393188e7 node_f2758bc3 node_897c2156 node_2b0cb6f1;
        label="Class: RetryQueue";
        name="RetryQueue";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_692015d6 {
    node_9bea28ec;
    label="File: send-request";
    name="send-request";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_c5cbb043 {
    label="File: sessionid";
    name="sessionid";
    style="filled";
    graph[style=dotted];
    subgraph cluster_102e39da {
        node_e76b385f node_a1b1ab51 node_d45c85a0 node_d5cfe5fc node_bfb57664 node_c6b65eae node_ebbeec9b;
        label="Class: SessionIdManager";
        name="SessionIdManager";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_a2e13c91 {
    node_266146b2;
    label="File: storage";
    name="storage";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_f4e68f6b {
    node_9eabdf8f node_b8b3fe70 node_af5b6cd9 node_d3c69713 node_7c81f64e node_0017c8c3;
    label="File: utils";
    name="utils";
    style="filled";
    graph[style=dotted];
};
}
